import streamlit as st
import pandas as pd
from PIL import Image
import base64

# ุฅุถุงูุฉ ุฃููููุฉ ุงูุชุฑุงุถูุฉ
DEFAULT_ICON = "๐"

# ุชุนุฑูู ุฃููููุฉ ุงูุชุฑุงุถูุฉ ูู ุญุงูุฉ ุนุฏู ูุฌูุฏ ุงูููู
try:
    icon = Image.open('logo.png')
    with open('logo.png', 'rb') as f:
        icon_base64 = base64.b64encode(f.read()).decode()
except FileNotFoundError:
    icon = None
    icon_base64 = ""

st.set_page_config(
    page_title="ุงููุณุงุนุฏ ูุญุณุงุจ ุงููุฒุงุฑู",
    page_icon=DEFAULT_ICON,  # ุงุณุชุฎุฏุงู ุงูุฃููููุฉ ุงูุงูุชุฑุงุถูุฉ ุฏุงุฆูุงู
    layout="wide",
    initial_sidebar_state="collapsed"
)

# ุฅุถุงูุฉ ุงูุดุนุงุฑ ูุงูุนููุงู ุจุฏูู ุตูุฑุฉ
st.markdown("""
    <div class="app-header">
        <div style="font-size: 64px; 
                    color: #00ff9d;
                    margin: 20px;
                    text-shadow: 0 0 10px rgba(0, 255, 157, 0.5);">
            ๐
        </div>
        <h1 class="app-title">ุงููุณุงุนุฏ ูุญุณุงุจ ุงููุฒุงุฑู</h1>
        <div class="app-subtitle">ุงุญุณุจ ุฏุฎููู ูููุฒุงุฑู ุจุฏูุฉ ูุณูููุฉ</div>
    </div>
""", unsafe_allow_html=True)

# ุงุฎุชูุงุฑ ุงููุบุฉ
language = st.selectbox("", ["ุงูุนุฑุจูุฉ", "English"], index=0)

# ุชุญุฏูุฏ ุงุชุฌุงู ุงููุต ุจูุงุกู ุนูู ุงููุบุฉ
direction = "rtl" if language == "ุงูุนุฑุจูุฉ" else "ltr"
st.markdown(f"<style>body {{ direction: {direction}; }}</style>", unsafe_allow_html=True)

# ุชุนุฑูู ุงููุตูุต ุญุณุจ ุงููุบุฉ
texts = {
    "ุงูุนุฑุจูุฉ": {
        "first_term": "ุงููุตู ุงูุฃูู",
        "mid_term": "ูุตู ุงูุณูุฉ",
        "second_term": "ุงููุตู ุงูุซุงูู",
        "analyze": "ุชุญููู ุงููุชุงุฆุฌ",
        "subjects": {
            "ุงูุฅุณูุงููุฉ": "ุงูุฅุณูุงููุฉ",
            "ุงููุบุฉ ุงูุนุฑุจูุฉ": "ุงููุบุฉ ุงูุนุฑุจูุฉ",
            "ุงููุบุฉ ุงูุฅูุฌููุฒูุฉ": "ุงููุบุฉ ุงูุฅูุฌููุฒูุฉ",
            "ุงููุบุฉ ุงููุฑูุณูุฉ": "ุงููุบุฉ ุงููุฑูุณูุฉ",
            "ุงูุฑูุงุถูุงุช": "ุงูุฑูุงุถูุงุช",
            "ุงูููุฒูุงุก": "ุงูููุฒูุงุก",
            "ุงูููููุงุก": "ุงูููููุงุก",
            "ุงูุฃุญูุงุก": "ุงูุฃุญูุงุก"
        }
    },
    "English": {
        "first_term": "First Term",
        "mid_term": "Mid Term",
        "second_term": "Second Term",
        "analyze": "Analyze Results",
        "subjects": {
            "ุงูุฅุณูุงููุฉ": "Islamic Studies",
            "ุงููุบุฉ ุงูุนุฑุจูุฉ": "Arabic",
            "ุงููุบุฉ ุงูุฅูุฌููุฒูุฉ": "English",
            "ุงููุบุฉ ุงููุฑูุณูุฉ": "French",
            "ุงูุฑูุงุถูุงุช": "Mathematics",
            "ุงูููุฒูุงุก": "Physics",
            "ุงูููููุงุก": "Chemistry",
            "ุงูุฃุญูุงุก": "Biology"
        }
    }
}

current_texts = texts[language]

# ุชุนุฑูู ุงูููุงุฏ
subjects = {
    "ุงูุฅุณูุงููุฉ": {"ุงููุตู ุงูุฃูู": 0, "ูุตู ุงูุณูุฉ": 0, "ุงููุตู ุงูุซุงูู": 0},
    "ุงููุบุฉ ุงูุนุฑุจูุฉ": {"ุงููุตู ุงูุฃูู": 0, "ูุตู ุงูุณูุฉ": 0, "ุงููุตู ุงูุซุงูู": 0},
    "ุงููุบุฉ ุงูุฅูุฌููุฒูุฉ": {"ุงููุตู ุงูุฃูู": 0, "ูุตู ุงูุณูุฉ": 0, "ุงููุตู ุงูุซุงูู": 0},
    "ุงููุบุฉ ุงููุฑูุณูุฉ": {"ุงููุตู ุงูุฃูู": 0, "ูุตู ุงูุณูุฉ": 0, "ุงููุตู ุงูุซุงูู": 0},
    "ุงูุฑูุงุถูุงุช": {"ุงููุตู ุงูุฃูู": 0, "ูุตู ุงูุณูุฉ": 0, "ุงููุตู ุงูุซุงูู": 0},
    "ุงูููุฒูุงุก": {"ุงููุตู ุงูุฃูู": 0, "ูุตู ุงูุณูุฉ": 0, "ุงููุตู ุงูุซุงูู": 0},
    "ุงูููููุงุก": {"ุงููุตู ุงูุฃูู": 0, "ูุตู ุงูุณูุฉ": 0, "ุงููุตู ุงูุซุงูู": 0},
    "ุงูุฃุญูุงุก": {"ุงููุตู ุงูุฃูู": 0, "ูุตู ุงูุณูุฉ": 0, "ุงููุตู ุงูุซุงูู": 0}
}

# ุฅุฏุฎุงู ุงูุฏุฑุฌุงุช
for subject in subjects:
    st.markdown(f'<div class="subject-name">{current_texts["subjects"][subject]}</div>', unsafe_allow_html=True)
    cols = st.columns(3, gap="large")
    
    with cols[0]:
        st.markdown(f'<div class="grade-label">{current_texts["first_term"]}</div>', unsafe_allow_html=True)
        subjects[subject]["ุงููุตู ุงูุฃูู"] = st.number_input(
            "",
            value=int(subjects[subject]["ุงููุตู ุงูุฃูู"]),
            min_value=0,
            max_value=100,
            key=f"first_{subject}"
        )
    
    with cols[1]:
        st.markdown(f'<div class="grade-label">{current_texts["mid_term"]}</div>', unsafe_allow_html=True)
        subjects[subject]["ูุตู ุงูุณูุฉ"] = st.number_input(
            "",
            value=int(subjects[subject]["ูุตู ุงูุณูุฉ"]),
            min_value=0,
            max_value=100,
            key=f"mid_{subject}"
        )
    
    with cols[2]:
        st.markdown(f'<div class="grade-label">{current_texts["second_term"]}</div>', unsafe_allow_html=True)
        subjects[subject]["ุงููุตู ุงูุซุงูู"] = st.number_input(
            "",
            value=int(subjects[subject]["ุงููุตู ุงูุซุงูู"]),
            min_value=0,
            max_value=100,
            key=f"second_{subject}"
        )

def calculate_minimum_required(first_term, mid_term):
    required_total = 50 * 3
    current_total = first_term + mid_term
    minimum_required = required_total - current_total
    return minimum_required

if st.button(current_texts["analyze"], key="calculate_btn"):
    results = []
    passing_subjects = []
    possible_subjects = []
    impossible_subjects = []
    
    for subject, scores in subjects.items():
        minimum_required = calculate_minimum_required(
            scores["ุงููุตู ุงูุฃูู"],
            scores["ูุตู ุงูุณูุฉ"]
        )
        
        status = ""
        if minimum_required <= 0:
            status = "โ (ูุงุฌุญ ุจุบุถ ุงููุธุฑ ุนู ุงููุตู ุงูุซุงูู)"
            passing_subjects.append(subject)
        elif minimum_required > 100:
            status = "โ (ูุณุชุญูู ุงููุฌุงุญ)"
            impossible_subjects.append(subject)
        else:
            status = f"โ (ูุฌุจ ุงูุญุตูู ุนูู {minimum_required:.0f} ุฃู ุฃูุซุฑ ูููุฌุงุญ)"
            possible_subjects.append(subject)
        
        results.append({
            "ุงููุงุฏุฉ": subject,
            "ุงููุตู ุงูุฃูู": scores["ุงููุตู ุงูุฃูู"],
            "ูุตู ุงูุณูุฉ": scores["ูุตู ุงูุณูุฉ"],
            "ุงููุตู ุงูุซุงูู": scores["ุงููุตู ุงูุซุงูู"],
            "ุงูุญุฏ ุงูุฃุฏูู ุงููุทููุจ ูู ุงููุตู ุงูุซุงูู": f"{minimum_required:.0f} {status}"
        })
    
    st.markdown('<div class="results-table">', unsafe_allow_html=True)
    df = pd.DataFrame(results)
    st.table(df)
    st.markdown('</div>', unsafe_allow_html=True)
    
    st.markdown('<div class="conclusion">', unsafe_allow_html=True)
    if passing_subjects:
        st.write(f"ุงูููุงุฏ ุงูุชู ุถููุช ุงููุฌุงุญ ูู: {', '.join(passing_subjects)}ุ ุญุชู ูู ุญุตูุช ุนูู 0 ูู ุงููุตู ุงูุซุงูู.")
    
    if possible_subjects:
        st.write(f"ุงูููุงุฏ ุงูุชุงููุฉ ูุฏูู ูุฑุตุฉ ูููุฌุงุญ ูููุง ุฅุฐุง ุญุตูุช ุนูู ุงูุฏุฑุฌุฉ ุงููุทููุจุฉ ูู ุงููุตู ุงูุซุงูู: {', '.join(possible_subjects)}")
    
    if impossible_subjects:
        st.write(f"ุงูููุงุฏ ุงูุชุงููุฉ ูุง ูููู ุงููุฌุงุญ ูููุง ุญุชู ูู ุญุตูุช ุนูู 100 ูู ุงููุตู ุงูุซุงูู: {', '.join(impossible_subjects)}")
    
    if possible_subjects:
        st.write("ุจุงูุชุงููุ ุชุญุชุงุฌ ุฅูู ุงูุชุฑููุฒ ุจุดูู ูุจูุฑ ุนูู ุงูููุงุฏ ุงูุชู ูุฏูู ูุฑุตุฉ ูููุฌุงุญ ูููุง. ๐")
    st.markdown('</div>', unsafe_allow_html=True)

# ุฅุถุงูุฉ ูุนูููุงุช ุงูุชูุงุตู ูุญููู ุงููุดุฑ
st.markdown("""
    <div class="footer">
        <div class="social-links">
            <a href="https://t.me/SadsHelp" target="_blank">ุดุจูุฉ ุงููุณุงุนุฏ ุงูุชุนููููุฉ ๐</a>
            <a href="https://t.me/+mg19Snwv14U4NWZi" target="_blank">ูุฑูุจ ุทูุงุจ ุงูุณุงุฏุณ ุงูุงุนุฏุงุฏู ๐</a>
        </div>
        <div class="copyright">
            By Tariq Al-Yaseen ยฉ 2025-2026
        </div>
    </div>
""", unsafe_allow_html=True)
